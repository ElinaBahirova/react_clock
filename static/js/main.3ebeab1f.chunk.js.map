{"version":3,"sources":["CurrentTime.tsx","Clock.tsx","App.tsx","index.tsx"],"names":["CurrentTime","state","today","Date","timerId","this","window","setInterval","setState","clearInterval","className","toLocaleTimeString","Component","Clock","name","props","getRandomName","value","now","toString","slice","App","clockName","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAMaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAQ,IAAIC,KAElB,EAAKK,SAAS,CAAEN,YAGf,OAdP,kCAiBE,WACEI,OAAOG,cAAcJ,KAAKD,WAlB9B,oBAqBE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAMQ,UAAU,cAAhB,SACGR,EAAMS,2BA1Bf,GAAiCC,aCCpBC,EAAb,wKACE,cADF,oBAKE,WACE,IAAQC,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKJ,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGI,IAGF,YAED,cAAC,EAAD,WAhBR,GAA2BF,aCE3B,SAASI,IACP,IAAMC,EAAQd,KAAKe,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAGX,IAAMI,EAAb,4MACEpB,MAAyB,CACvBqB,UAAW,UACXC,UAAU,GAHd,EAMEnB,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEc,UAAWN,QAC1B,MAEHQ,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKnB,SAAS,CAAEe,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKjB,SAAS,CAAEe,UAAU,SApBhC,kCAwBE,WACEjB,OAAOG,cAAcJ,KAAKD,WAzB9B,oBA4BE,WACE,MAAgCC,KAAKJ,MAA7BqB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKb,UAAU,MAAf,UACE,6CAEEa,GACA,cAAC,EAAD,CAAOT,KAAMQ,WApCvB,GAAyBV,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.3ebeab1f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date;\n};\n\nexport class CurrentTime extends Component<{}, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const today = new Date();\n\n      this.setState({ today });\n\n      // console.info(today.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n\n    return (\n      <span className=\"Clock__time\">\n        {today.toLocaleTimeString()}\n      </span>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { CurrentTime } from './CurrentTime';\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, {}> {\n  componentDidUpdate() {\n    // console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n  }\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <CurrentTime />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}